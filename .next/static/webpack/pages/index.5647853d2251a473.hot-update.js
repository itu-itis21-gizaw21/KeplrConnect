"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./chaininfo.tsx":
/*!***********************!*\
  !*** ./chaininfo.tsx ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar chains = {\n    \"theta-testnet-001\": {\n        chainId: \"cosmos-testnet\",\n        chainName: \"Cosmos\",\n        rpc: \"https://rpc.sentry-01.theta-testnet.polypore.xyz\",\n        rest: \"https://rest.sentry-01.theta-testnet.polypore.xyz\",\n        bip44: {\n            coinType: 118\n        },\n        bech32Config: {\n            bech32PrefixAccAddr: \"cosmos\",\n            bech32PrefixAccPub: \"cosmospub\",\n            bech32PrefixValAddr: \"cosmosvaloper\",\n            bech32PrefixValPub: \"cosmosvaloperpub\",\n            bech32PrefixConsAddr: \"cosmosvalcons\",\n            bech32PrefixConsPub: \"cosmosvalconspub\"\n        },\n        currencies: [\n            {\n                coinDenom: \"ATOM\",\n                coinMinimalDenom: \"uatom\",\n                coinDecimals: 6,\n                coinGeckoId: \"cosmos\"\n            }\n        ],\n        feeCurrencies: [\n            {\n                coinDenom: \"ATOM\",\n                coinMinimalDenom: \"uatom\",\n                coinDecimals: 6,\n                coinGeckoId: \"cosmos\",\n                gasPriceStep: {\n                    low: 0.01,\n                    average: 0.02,\n                    high: 0.1\n                }\n            }\n        ],\n        stakeCurrency: {\n            coinDenom: \"ATOM\",\n            coinMinimalDenom: \"uatom\",\n            coinDecimals: 6,\n            coinGeckoId: \"cosmos\"\n        },\n        coinType: 118\n    },\n    \"cosmoshub-4\": {\n        chainId: \"cosmoshub-4\",\n        chainName: \"Cosmos\",\n        rpc: \"https://cosmos-rpc.publicnode.com:443\",\n        rest: \"https://cosmos-rest.publicnode.com\",\n        bip44: {\n            coinType: 118\n        },\n        bech32Config: {\n            bech32PrefixAccAddr: \"cosmos\",\n            bech32PrefixAccPub: \"cosmospub\",\n            bech32PrefixValAddr: \"cosmosvaloper\",\n            bech32PrefixValPub: \"cosmosvaloperpub\",\n            bech32PrefixConsAddr: \"cosmosvalcons\",\n            bech32PrefixConsPub: \"cosmosvalconspub\"\n        },\n        currencies: [\n            {\n                coinDenom: \"ATOM\",\n                coinMinimalDenom: \"uatom\",\n                coinDecimals: 6,\n                coinGeckoId: \"cosmos\"\n            }\n        ],\n        feeCurrencies: [\n            {\n                coinDenom: \"ATOM\",\n                coinMinimalDenom: \"uatom\",\n                coinDecimals: 6,\n                coinGeckoId: \"cosmos\",\n                gasPriceStep: {\n                    low: 0.01,\n                    average: 0.02,\n                    high: 0.1\n                }\n            }\n        ],\n        stakeCurrency: {\n            coinDenom: \"ATOM\",\n            coinMinimalDenom: \"uatom\",\n            coinDecimals: 6,\n            coinGeckoId: \"cosmos\"\n        },\n        coinType: 118\n    },\n    \"celestia\": {\n        chainId: \"celestia\",\n        chainName: \"Celestia\",\n        rpc: \"https://celestia-rpc.publicnode.com:443\",\n        rest: \"https://celestia-rest.publicnode.com\",\n        bip44: {\n            coinType: 118\n        },\n        bech32Config: {\n            bech32PrefixAccAddr: \"celestia\",\n            bech32PrefixAccPub: \"celestia\" + \"pub\",\n            bech32PrefixValAddr: \"celestia\" + \"valoper\",\n            bech32PrefixValPub: \"celestia\" + \"valoperpub\",\n            bech32PrefixConsAddr: \"celestia\" + \"valcons\",\n            bech32PrefixConsPub: \"celestia\" + \"valconspub\"\n        },\n        currencies: [\n            {\n                coinDenom: \"TIA\",\n                coinMinimalDenom: \"utia\",\n                coinDecimals: 6,\n                coinGeckoId: \"celestia\"\n            }, \n        ],\n        feeCurrencies: [\n            {\n                coinDenom: \"TIA\",\n                coinMinimalDenom: \"utia\",\n                coinDecimals: 6,\n                coinGeckoId: \"celestia\",\n                gasPriceStep: {\n                    low: 0.01,\n                    average: 0.02,\n                    high: 0.1\n                }\n            }, \n        ],\n        stakeCurrency: {\n            coinDenom: \"TIA\",\n            coinMinimalDenom: \"utia\",\n            coinDecimals: 6,\n            coinGeckoId: \"celestia\"\n        },\n        coinType: 118\n    },\n    \"osmosis\": {\n        chainId: \"osmosis-1\",\n        chainName: \"Osmosis\",\n        rpc: \"https://osmosis-rpc.publicnode.com:443\",\n        rest: \"https://osmosis-rest.publicnode.com\",\n        bip44: {\n            coinType: 118\n        },\n        bech32Config: {\n            bech32PrefixAccAddr: \"osmosis\",\n            bech32PrefixAccPub: \"osmosispub\",\n            bech32PrefixValAddr: \"osmosisvaloper\",\n            bech32PrefixValPub: \"osmosisvaloperpub\",\n            bech32PrefixConsAddr: \"osmosisvalcons\",\n            bech32PrefixConsPub: \"osmosisvalconspub\"\n        },\n        currencies: [\n            {\n                coinDenom: \"OSMO\",\n                coinMinimalDenom: \"uosmo\",\n                coinDecimals: 6,\n                coinGeckoId: \"osmosis\"\n            }\n        ],\n        feeCurrencies: [\n            {\n                coinDenom: \"OSMO\",\n                coinMinimalDenom: \"uosmo\",\n                coinDecimals: 6,\n                coinGeckoId: \"osmosis\",\n                gasPriceStep: {\n                    \"low\": 0.01,\n                    \"average\": 0.025,\n                    \"high\": 0.03\n                }\n            }\n        ],\n        stakeCurrency: {\n            coinDenom: \"OSMO\",\n            coinMinimalDenom: \"uosmo\",\n            coinDecimals: 6,\n            coinGeckoId: \"osmosis\"\n        },\n        coinType: 118\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (chains);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./chaininfo.tsx\n"));

/***/ })

});